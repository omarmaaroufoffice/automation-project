#!/bin/bash

# Capture the directory where comp was initially executed
export INITIAL_EXECUTION_DIR="$PWD"

# Check if a tmux session actually exists
EXISTING_SESSIONS=$(tmux list-sessions 2>/dev/null)

# Prevent multiple instances only if a real tmux session exists
if [ -n "$EXISTING_SESSIONS" ] && [ -f "/tmp/comp_running" ]; then
    echo "Automation is already running. Use the existing tmux session."
    exit 1
fi

# Remove any stale lock files
rm -f /tmp/comp_running

# Create a lock file
touch /tmp/comp_running

# Trap to remove lock file on exit
trap 'rm -f /tmp/comp_running' EXIT

# Load pyenv
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"
eval "$(pyenv init --path)"

# Activate specific Python version
pyenv shell 3.10.0

# Absolute paths
INITIALIZER_SCRIPT="/Users/omarmaarouf/werfef/project_initializer.py"
AUTOMATION_SCRIPT="/Users/omarmaarouf/werfef/AUTOMATION/run_automation.py"
AUTOMATION_DIR="/Users/omarmaarouf/werfef/AUTOMATION"

# Run project initializer in the current window
cd "$INITIAL_EXECUTION_DIR" && python "$INITIALIZER_SCRIPT"

# Wait for ROAD_MAP.md to be created (up to 2 minutes)
MAX_WAIT=120  # 2 minutes in seconds
WAIT_TIME=0

while [ ! -f "ROAD_MAP.md" ]; do
    sleep 1
    ((WAIT_TIME++))
    
    # Print a waiting message every 10 seconds
    if [ $((WAIT_TIME % 10)) -eq 0 ]; then
        echo "Waiting for ROAD_MAP.md to be created... ($((WAIT_TIME)) seconds)"
    fi
    
    # Timeout after MAX_WAIT seconds
    if [ $WAIT_TIME -ge $MAX_WAIT ]; then
        echo "Timeout: ROAD_MAP.md was not created within $MAX_WAIT seconds."
        exit 1
    fi
done

# Kill existing session if it exists
tmux kill-session -t project_setup 2>/dev/null

# Create new tmux session
tmux new-session -d -s project_setup

# Split into four panes
tmux split-window -v
tmux split-window -h -t 0
tmux split-window -h -t 2

# Send commands to panes
# Pane 0 (top left): Motion Detector
tmux send-keys -t 0 "cd $AUTOMATION_DIR && python motion_detector.py" Enter

# Pane 1 (top right): Blue Detector
tmux send-keys -t 1 "cd $AUTOMATION_DIR && python blue_detector.py" Enter

# Pane 2 (bottom left): Clicker
tmux send-keys -t 2 "cd $AUTOMATION_DIR && python clicker.py" Enter

# Pane 3 (bottom right): Instruction Typer
tmux send-keys -t 3 "cd $AUTOMATION_DIR && python instruction_typer.py" Enter

# Attach to the session, replacing the current terminal
tmux attach-session -t project_setup 